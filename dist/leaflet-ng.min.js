/* leaflet-ng - 2016-07-18
* https://github.com/justinwp/leaflet-ng#readme
* Copyright (c) 2016 ;
* Last Modified: Mon Jul 18 2016 13:20:53
*/
angular.module("leaflet-ng-core",[]).directive("leaflet",["$q","leafletData",function(a,b){return{restrict:"EA",replace:!0,scope:{defaults:"=",layers:"="},transclude:!0,template:'<div class="angular-leaflet-map"><div ng-transclude></div></div>',controller:function(b){this._leafletMap=a.defer(),this.getMap=function(){return this._leafletMap.promise},this.getScope=function(){return b}},link:function(a,c,d,e){var f=new L.Map(c[0],a.defaults);b.set("map",f,d.id),e._leafletMap.resolve(f),console.log(a.defaults),f.whenReady(function(){console.log("map ready"),b.set("map",f,d.id)}),a.$on("$destroy",function(){f.remove(),b.destroy(d.id)})}}}]),angular.module("leaflet-ng-core").factory("leafletData",[function(){function a(a){return angular.isDefined(a)?a:"main"}function b(b,c,e){e=a(e),angular.isDefined(d[b])||(d[b]={}),d[b][e]=c}function c(b,c){if(c=a(c),angular.isDefined(d[b])&&angular.isDefined(d[b][c]))return d[b][c]}var d={};return{set:b,get:c,getMap:function(a){return c("map",a)},destroy:function(b){b=a(b),angular.forEach(d,function(a,c){a.hasOwnProperty(b)&&delete d[c][b]})}}}]),angular.module("leaflet-ng-layers").directive("layers",["leafletLayers","leafletData","$q",function(a,b,c){var d=a.getAllDefinitions();return{restrict:"A",scope:!1,replace:!1,require:"leaflet",controller:function(a){a._leafletLayers=c.defer(),this.getLayers=function(){return a._leafletLayers.promise}},link:function(c,e,f,g){var h=g.getScope();h.layers;g.getMap().then(function(e){function g(b,c,f){angular.forEach(c,function(c,d){angular.isDefined(b[d])||e.removeLayer(a[f][d])}),angular.forEach(b,function(g,h){var i;angular.isDefined(a[f][h])?(i=a[f][h],angular.equals(b[h].params.options,c[h].params.options)||(angular.extend(i.options,b[h].params.options),i.redraw())):(i=d[g.type].createLayer(g.params),a.overlays[h]=i),g.visible?e.addLayer(i):e.removeLayer(i)})}var i=f.id;c._leafletLayers.resolve(a),a=b.get("layers",i),a=angular.isDefined(a)?a:{},a.baselayers={},a.overlays={},h.$watch("layers.baselayers",function(a,b){console.log(a,b)},!0),h.$watch("layers.overlays",function(a,b){g(a,b,"overlays")},!0),b.set("layers",a,i)})}}}]),angular.module("leaflet-ng-layers",["leaflet-ng-core"]),angular.module("leaflet-ng-layers").factory("leafletLayers",["$q",function(a){function b(a,b){d.hasOwnProperty(a)&&$log.error("[leaflet-ng-core] Layer already defined."),d[a]=b}function c(a){return d[a]}var d={xyz:{mustHaveUrl:!0,createLayer:function(a){return L.tileLayer(a.url,a.options)}}};return{setDefinitions:b,getDefinitions:c,getAllDefinitions:function(){return d}}}]);